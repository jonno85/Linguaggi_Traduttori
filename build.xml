<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="Linguaggi_Traduttori" default="default" basedir=".">
    <description>Builds, tests, and runs the project Linguaggi_Traduttori.</description>
    <import file="nbproject/build-impl.xml"/>
    
	<property name="parser.dir" location="${basedir}/parser" />
	<property name="src.dir" location="${basedir}/src" />
	<property name="generated.dir" location="${basedir}/generated" />
	<property name="bin.dir" location="${basedir}/bin" />
	<property name="lib.dir" location="${basedir}/lib" />
	
	<property name="parser.file" location="${parser.dir}/parser.cup" />
	
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	

	 
	
	<path id="project.classpath">
			<pathelement location="${bin.dir}" />
	</path>
	<path id="lib.dir.classpath">
		<pathelement location="${bin.dir}" />
		<fileset dir="${lib.dir}" casesensitive="true" >
			<include name="*.jar" />
		</fileset>	
	</path>		
	
	<target name="init">
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${generated.dir}" />
	</target>
	
	<target name="clean" description="Clean all">
		<delete dir="${bin.dir}" />
		<delete dir="${generated.dir}" />
	</target>	
	
	<target name="chk-parser-artifacts">
		<uptodate property="generate-artifacts.notRequired" targetfile="${generated.dir}/.flagfile">
			<srcfiles dir="${parser.dir}">
				<include name="**/*.cup" />
				<include name="**/*.jflex" />
			</srcfiles>FDSControl.wsdl
		</uptodate>
	</target>
	
	
		<taskdef name="cup"
		  classname="java_cup.AntTask"
		  classpathref="cupclasspath"
		/>

	<taskdef classname="JFlex.anttask.JFlexTask" name="jflex" />


	
	<target name="generate-parser-artifacts" unless="generate-artifacts.notRequired" depends="init, chk-parser-artifacts" description="generate-parser-artifatcs">
		
		<jflex
		    file="${parser.dir}"
		    outdir="${generated.dir}"
		/>

		<cup srcfile="${parser.dir}"
			  destdir="${generated.dir}"
			  interface="true"
			/>
		<touch file="${generated.dir}/.flagfile" />
	</target>
		
	<target name="build" depends="init, generate-parser-artifacts" description="Build the sources">
		<javac debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" destdir="${bin.dir}">
			<src path="${generated.dir}" />
			<src path="${src.dir}" />
			<classpath refid="project.classpath" />
			<classpath refid="lib.dir.classpath" />
		</javac>
	</target>
		
	<target name="run.server" depends="build, setseed" description="lancia il server">
        <echo>Running SKYBot...</echo>
        <java classname="it.polito.lt.skype.bot.SKYBot" failonerror="true" fork="yes">
               
                <classpath>
                        <path refid="lib.dir.classpath" />
                        <pathelement path="${build.dir}" />
                </classpath>
        </java>
    </target>
</project>
